apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2019-12-12T12:55:22Z"
  generation: 1
  name: catalog-primary
  resourceVersion: "654147"
  selfLink: /apis/apps/v1/namespaces/keptnorders-production/deployments/catalog
  uid: a8a2e121-1cde-11ea-9ceb-42010a8e023f
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: catalog-primary
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: catalog-primary
    spec:
      containers:
      - env:
        - name: DT_CUSTOM_PROP
          value: keptn_project=keptnorders keptn_service=catalog keptn_stage=production
            keptn_deployment=primary
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: DEPLOYMENT_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['deployment']
        - name: CONTAINER_IMAGE
          value: robjahn/keptn-orders-catalog-service:1
        - name: KEPTN_PROJECT
          value: keptnorders
        - name: KEPTN_STAGE
          value: production
        - name: KEPTN_SERVICE
          value: catalog
        - name: KEPTN_DEPLOYMENT
          value: canary
        image: robjahn/keptn-orders-catalog-service:1
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 15
        name: catalog
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 15
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
